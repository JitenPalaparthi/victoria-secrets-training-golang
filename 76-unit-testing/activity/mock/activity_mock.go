// Code generated by MockGen. DO NOT EDIT.
// Source: activity.go

// Package mockactivity is a generated GoMock package.
package mockactivity

import (
	activity "demo/activity"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockIActivity is a mock of IActivity interface.
type MockIActivity struct {
	ctrl     *gomock.Controller
	recorder *MockIActivityMockRecorder
}

// MockIActivityMockRecorder is the mock recorder for MockIActivity.
type MockIActivityMockRecorder struct {
	mock *MockIActivity
}

// NewMockIActivity creates a new mock instance.
func NewMockIActivity(ctrl *gomock.Controller) *MockIActivity {
	mock := &MockIActivity{ctrl: ctrl}
	mock.recorder = &MockIActivityMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIActivity) EXPECT() *MockIActivityMockRecorder {
	return m.recorder
}

// GetActivity mocks base method.
func (m *MockIActivity) GetActivity(url string) (*activity.ActivityType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActivity", url)
	ret0, _ := ret[0].(*activity.ActivityType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetActivity indicates an expected call of GetActivity.
func (mr *MockIActivityMockRecorder) GetActivity(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActivity", reflect.TypeOf((*MockIActivity)(nil).GetActivity), url)
}
